#!/bin/bash

#
#
#
DEBUG=${DEBUG:-}
SOFTDEVICE_DIR=arch/arm/src/nrf52/softdevice
SOFTDEVICE=s132_nrf52_5.0.0-1.alpha_softdevice.hex

declare -A nRF52_Vars
declare -A Program_Chip

FLASH_KEYS=( "HEX_FILE" "FLASHER" "FLASH_RESET" "FLASH_ERASE" "FLASH_FLASH" )
nRF52_Vars["HEX_FILE"]="nuttx.hex"
nRF52_Vars["FLASHER"]="nrfjprog"
nRF52_Vars["FLASH_RESET"]="-r"
nRF52_Vars["FLASH_ERASE"]="-e"
nRF52_Vars["FLASH_FLASH"]="--program"
nRF52_Vars["FLASH_VERIFY"]="--verify"

set_programmer_values()
{
        local tmp=

        tmp=$(declare -p "$1")
        eval Program_Chip=${tmp#*=}
}

print_programmer_chip_values()
{
        local key=
        local tmp=

        tmp=$(declare -p "$1")
        for key in "${tmp[0]}" ; do
                echo -n -e "\\t$key\\t"
                [ "${#key}" -le 8 ] && echo -n -e "\\t"
                echo -e "${tmp[$key]}"
        done
}

echo_dbg()
{
        [ "$DEBUG" = "1" ] || return
        echo -e "$@" >&2
}

Exec()
{
        echo_dbg "$@"
        [  -z "$DEBUG" ] && $@
}
# CWD="$(pwd)"
# set_programmer_values nRF52_Vars
# tmp=$(declare -p "$1" | sed -e 's/^.* //')
# echo "tmp: $tmp"
# print_programmer_chip_values Program_Chip

REPO_ROOT="$(git rev-parse --show-toplevel 2>/dev/null)"
echo_dbg "REPO_ROOT ($REPO_ROOT)"
  (
        cd $REPO_ROOT || return 1
        if [ ! -f  "${nRF52_Vars["HEX_FILE"]}" ] ; then
                echo "Where's  ${nRF52_Vars["HEX_FILE"]}"
                exit -1
        fi

#       Exec nrfjprog -e
#       Exec nrfjprog --program "${nRF52_Vars["HEX_FILE"]}"

        Exec "${nRF52_Vars["FLASHER"]}" "${nRF52_Vars["FLASH_ERASE"]}"
        Exec "${nRF52_Vars["FLASHER"]}" "${nRF52_Vars["FLASH_FLASH"]}" "${nRF52_Vars["HEX_FILE"]}"
        Exec "${nRF52_Vars["FLASHER"]}" "${nRF52_Vars["FLASH_RESET"]}"
        if grep softdevice System.map >/dev/null ; then
                echo_dbg "Programmig the softdevice ($SOFTDEVICE)"
                Exec nrfjprog --program $SOFTDEVICE_DIR/$SOFTDEVICE
        fi
  )

