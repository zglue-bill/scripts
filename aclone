#!/bin/bash

if ! ROOT=$(git rev-parse --show-toplevel) ; then
        echo "This directory does not appear to be in a repo tree." >&2
        echo "This script is specifically meant to be run inside a repo." >&2
        exit 2
fi
CLONE_DB=$ROOT/cdb_clone


# remote_branch=$(git status -b --porcelain |
remote_state=( $(git status -b --porcelain | head -1 | awk -F'.' '{print $1, $NF, NF}') )
nf=${#remote_state[@]}

nf=$(( nf - 1 ))
pieces=${remote_state[$nf]}
if [ "$pieces" -lt 2 ] ; then
        echo "Only found a a local branch, no backing repo."
        exit 2
fi

if [ "${#remote_state[@]}" -lt 2 ] ; then
        echo "No remote repo for this local branch." >&2
        exit 1 
fi

local_branch=${remote_state[1]}
remote=( $( echo ${remote_state[2]} | awk -F'/' '{print $1, $2}') )
if [ -z "${remote[1]}" ] ; then
        echo "There is no remote branch backing this branch [${remote[1]}]." >&2
        exit 1
fi

clone_ssh=$(git remote get-url ${remote[0]})
if ! grep "$clone_ssh" "$CLONE_DB" >/dev/null ; then
        echo "git clone -b ${remote[1]} $clone_ssh" >> $CLONE_DB
else
        echo "Already in the database."
fi
# cat $CLONE_DB

